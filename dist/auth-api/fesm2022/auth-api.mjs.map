{"version":3,"file":"auth-api.mjs","sources":["../../../projects/auth-api/src/lib/enums/authAPI.endPoints.ts","../../../projects/auth-api/src/lib/url.injection.ts","../../../projects/auth-api/src/lib/adaptor/auth-apiadaptor.service.ts","../../../projects/auth-api/src/lib/auth-api.service.ts","../../../projects/auth-api/src/public-api.ts","../../../projects/auth-api/src/auth-api.ts"],"sourcesContent":["export class AuthEndPoint {\r\n  static readonly LOGIN = 'auth/signin'\r\n  static readonly SIGNUP = 'auth/signup'\r\n  static readonly CHANGE_PASSWORD = 'auth/changePassword'\r\n  static readonly DELETE_ACCOUNT = 'auth/deleteMe'\r\n  static readonly EDIT_PROFILE = 'auth/editProfile'\r\n  static readonly LOGOUT = 'auth/logout'\r\n  static readonly LOGGED_INFO = 'auth/profileData'\r\n  static readonly FORGET_PASSWORD = 'auth/forgotPassword'\r\n  static readonly RESET_PASSWORD = 'auth/resetPassword'\r\n  static readonly VERIFY_CODE = 'auth/verifyResetCode'\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const BASE_URL = new InjectionToken<string>('BASE_URL');\r\n","import { Injectable } from '@angular/core';\r\nimport { Adaptor } from '../interfaces/adaptor';\r\nimport { authAPIRes, authRes } from '../interfaces/login-res';\r\nimport { ForgetAPIRes, msgRes } from '../interfaces/forget-res';\r\nimport { VerifyRes } from '../interfaces/verify-res';\r\nimport { SetPassRes } from '../interfaces/set-pass-res';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthAPIAdaptorService implements Adaptor {\r\n\r\n  constructor() { }\r\n  adapt(data: authAPIRes): authRes {\r\n    return {\r\n      message:data.message,\r\n      token:data.token,\r\n      userEmail:data.user.email,\r\n    }\r\n  }\r\n  codeResAdapt(data: ForgetAPIRes): msgRes {\r\n    return {\r\n      message:data.message,\r\n    }\r\n  }\r\n  setPassAdapt(data: SetPassRes): authRes {\r\n    return {\r\n      message: data.message,\r\n      token: data.token,\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { inject, Injectable, PLATFORM_ID } from '@angular/core';\r\nimport { catchError, map, Observable, throwError } from 'rxjs';\r\nimport { AuthAPIAdaptorService } from './adaptor/auth-apiadaptor.service';\r\nimport { AuthAPI } from './base/AuthAPI';\r\nimport { AuthEndPoint } from './enums/authAPI.endPoints';\r\nimport { ForgetData } from './interfaces/forget-data';\r\nimport { msgRes } from './interfaces/forget-res';\r\nimport { LoginData } from './interfaces/login-data';\r\nimport { authRes } from './interfaces/login-res';\r\nimport { RegisterData } from './interfaces/register-data';\r\nimport { SetPassData } from './interfaces/set-pass-data';\r\nimport { VerifyData } from './interfaces/verify-data';\r\nimport { VerifyRes } from './interfaces/verify-res';\r\nimport { BASE_URL } from './url.injection';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthApiService implements AuthAPI {\r\n  private readonly base_url = inject(BASE_URL)\r\n  constructor(private httpClient: HttpClient,\r\n    private authAPIAdaptorService: AuthAPIAdaptorService) { }\r\n  login(data: LoginData): Observable<authRes> {\r\n    return this.httpClient.post(`${this.base_url}${AuthEndPoint.LOGIN}`, data).pipe(\r\n      map((res: any) => this.authAPIAdaptorService.adapt(res))\r\n    )\r\n  }\r\n  register(data: RegisterData): Observable<authRes> {\r\n    return this.httpClient.post(`${this.base_url}${AuthEndPoint.SIGNUP}`, data).pipe(\r\n      map((res: any) => this.authAPIAdaptorService.adapt(res)),\r\n      catchError((err) => throwError(err))\r\n    )\r\n  }\r\n  forgetPass(data: ForgetData): Observable<msgRes> {\r\n    return this.httpClient.post(`${this.base_url}${AuthEndPoint.FORGET_PASSWORD}`, data).pipe(\r\n      map((res: any) => this.authAPIAdaptorService.codeResAdapt(res)),\r\n      catchError((err) => throwError(err))\r\n    )\r\n  }\r\n  verifyCode(data: VerifyData): Observable<VerifyRes> {\r\n    return this.httpClient.post(`${this.base_url}${AuthEndPoint.VERIFY_CODE}`, data).pipe(\r\n      map((res: any) => {\r\n        return { status: res.status };\r\n      }),\r\n      catchError((err) => throwError(err))\r\n    )\r\n  }\r\n  setPassword(data: SetPassData): Observable<authRes> {\r\n    return this.httpClient.put(`${this.base_url}${AuthEndPoint.RESET_PASSWORD}`, data).pipe(\r\n      map((res: any) => this.authAPIAdaptorService.setPassAdapt(res)),\r\n      catchError((err) => throwError(err))\r\n    )\r\n\r\n  }\r\n\r\n\r\n}\r\n","/*\r\n * Public API Surface of auth-api\r\n */\r\n\r\nexport * from './lib/auth-api.service';\r\nexport * from './lib/url.injection';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2.AuthAPIAdaptorService"],"mappings":";;;;;MAAa,YAAY,CAAA;AACvB,IAAA,OAAgB,KAAK,GAAG,aAAa;AACrC,IAAA,OAAgB,MAAM,GAAG,aAAa;AACtC,IAAA,OAAgB,eAAe,GAAG,qBAAqB;AACvD,IAAA,OAAgB,cAAc,GAAG,eAAe;AAChD,IAAA,OAAgB,YAAY,GAAG,kBAAkB;AACjD,IAAA,OAAgB,MAAM,GAAG,aAAa;AACtC,IAAA,OAAgB,WAAW,GAAG,kBAAkB;AAChD,IAAA,OAAgB,eAAe,GAAG,qBAAqB;AACvD,IAAA,OAAgB,cAAc,GAAG,oBAAoB;AACrD,IAAA,OAAgB,WAAW,GAAG,sBAAsB;;;MCRzC,QAAQ,GAAG,IAAI,cAAc,CAAS,UAAU;;MCQhD,qBAAqB,CAAA;AAEhC,IAAA,WAAA,GAAA;AACA,IAAA,KAAK,CAAC,IAAgB,EAAA;QACpB,OAAO;YACL,OAAO,EAAC,IAAI,CAAC,OAAO;YACpB,KAAK,EAAC,IAAI,CAAC,KAAK;AAChB,YAAA,SAAS,EAAC,IAAI,CAAC,IAAI,CAAC,KAAK;SAC1B;;AAEH,IAAA,YAAY,CAAC,IAAkB,EAAA;QAC7B,OAAO;YACL,OAAO,EAAC,IAAI,CAAC,OAAO;SACrB;;AAEH,IAAA,YAAY,CAAC,IAAgB,EAAA;QAC3B,OAAO;YACL,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB;;wGAnBQ,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA;AAArB,IAAA,OAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,cAFpB,MAAM,EAAA,CAAA;;4FAEP,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAHjC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE;AACb,iBAAA;;;MCUY,cAAc,CAAA;AAEL,IAAA,UAAA;AACV,IAAA,qBAAA;AAFO,IAAA,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;IAC5C,WAAoB,CAAA,UAAsB,EAChC,qBAA4C,EAAA;QADlC,IAAU,CAAA,UAAA,GAAV,UAAU;QACpB,IAAqB,CAAA,qBAAA,GAArB,qBAAqB;;AAC/B,IAAA,KAAK,CAAC,IAAe,EAAA;AACnB,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAG,EAAA,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,KAAK,CAAE,CAAA,EAAE,IAAI,CAAC,CAAC,IAAI,CAC7E,GAAG,CAAC,CAAC,GAAQ,KAAK,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CACzD;;AAEH,IAAA,QAAQ,CAAC,IAAkB,EAAA;QACzB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA,EAAG,IAAI,CAAC,QAAQ,CAAA,EAAG,YAAY,CAAC,MAAM,CAAE,CAAA,EAAE,IAAI,CAAC,CAAC,IAAI,CAC9E,GAAG,CAAC,CAAC,GAAQ,KAAK,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EACxD,UAAU,CAAC,CAAC,GAAG,KAAK,UAAU,CAAC,GAAG,CAAC,CAAC,CACrC;;AAEH,IAAA,UAAU,CAAC,IAAgB,EAAA;QACzB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA,EAAG,IAAI,CAAC,QAAQ,CAAA,EAAG,YAAY,CAAC,eAAe,CAAE,CAAA,EAAE,IAAI,CAAC,CAAC,IAAI,CACvF,GAAG,CAAC,CAAC,GAAQ,KAAK,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAC/D,UAAU,CAAC,CAAC,GAAG,KAAK,UAAU,CAAC,GAAG,CAAC,CAAC,CACrC;;AAEH,IAAA,UAAU,CAAC,IAAgB,EAAA;QACzB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA,EAAG,IAAI,CAAC,QAAQ,CAAA,EAAG,YAAY,CAAC,WAAW,CAAE,CAAA,EAAE,IAAI,CAAC,CAAC,IAAI,CACnF,GAAG,CAAC,CAAC,GAAQ,KAAI;AACf,YAAA,OAAO,EAAE,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE;AAC/B,SAAC,CAAC,EACF,UAAU,CAAC,CAAC,GAAG,KAAK,UAAU,CAAC,GAAG,CAAC,CAAC,CACrC;;AAEH,IAAA,WAAW,CAAC,IAAiB,EAAA;QAC3B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAA,EAAG,IAAI,CAAC,QAAQ,CAAA,EAAG,YAAY,CAAC,cAAc,CAAE,CAAA,EAAE,IAAI,CAAC,CAAC,IAAI,CACrF,GAAG,CAAC,CAAC,GAAQ,KAAK,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAC/D,UAAU,CAAC,CAAC,GAAG,KAAK,UAAU,CAAC,GAAG,CAAC,CAAC,CACrC;;wGAjCQ,cAAc,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,qBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA;AAAd,IAAA,OAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,cAFb,MAAM,EAAA,CAAA;;4FAEP,cAAc,EAAA,UAAA,EAAA,CAAA;kBAH1B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE;AACb,iBAAA;;;AClBD;;AAEG;;ACFH;;AAEG;;;;"}